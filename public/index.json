[{"content":"不知道哪个下午我忽然感觉玩CSGO、彩虹六号这些游戏都没劲了起来。\n我想玩FPS游戏，但CSGO、彩虹六号在这一刻好像总是少了一丢丢味道。\n少的是什么呢？无疑这些游戏在我的Steam库中都排在收藏夹里，是我很喜欢的作品。有竞技性、有趣味性、有游戏性。\n但是他们都不够硬核，不够真实。\n在朋友们说的硬核游戏中，我找到了Squad——战术小队。\n至今已经玩了100个小时，还是个一天杀不了几个人的萌新，但也逐渐理解了游戏机制，战术规则，索敌技巧等等。\n就来分享一下我的游玩体验吧。\nSquad真的硬核吗？ 坦然地说，Squad并不是那种绝对拟真的超硬核模拟器。\n游戏范围为一整个大战场，以大地图上的战役作为游戏题材的游戏，其实有很多不真实的地方。\n微观上，没有丰富的武器系统和真实的伤害计算机制。战场上的武器种类单调，人被炸弹倒在地上，用一个绷带就可以扶起来。宏观上，没有真实的运输和补给机制。弹药不分种类，而是全部按数字作为“弹药”计算。建筑的材料也只是按数字作为“建材”计算。出生点弹药和建材无限，没有资源分配机制，而只有将资源运输到前线的运输机制。小了比不过逃离塔科夫，大了比不过Arma3。\n但即便如此，Squad仍然是我非常非常非常非常喜爱的作品，也并没有辜负“硬核”的标签。\n极致的代入感、压迫感、真实感 真实的战场是怎么样的？或许你有看过一些战场的真实录像。\nSquad是一款游戏，却教会了我很多显而易见的道理：\n在战场上，所有人都害怕死亡，你往往看不见敌人，也往往不存在那种近距离的激情对枪 不论你穿了多么厚的防弹衣，你都扛不住几发子弹 没有重火力的单兵在厚重的装甲面前甚至是地毯式的轰炸中束手无策 无论你在战局中杀死了多少个敌人，都很难决定战局的胜负走向 单兵能携带的东西不多 不要逞英雄，聪明的大脑、情报和信息、队友的合作都比精准的枪法有用太多 为了达成目标，无论装备多精良、训练多完备的队伍都会损失队员 虽然死亡是家常便饭，但每个队友都很重要 这款游戏能带给你极致的代入感、压迫感、真实感。让你感受到战场和死亡带给一个人的压迫和痛苦。\n战场上的每一个人，都不是强大的游戏角色，而是经过数十年的训练，拿着精良的装备，仍然可能在顷刻间毙命的，无比恐惧和害怕死亡的、会感到累的、会受伤的有血有肉的人。\n游戏中有很多有趣而真实的机制都反映了这一点：\n当有子弹从你身旁飞过，或身边有爆炸发生，你的视野中会出现一片阴影，同时你会“被压制”而很难举的稳枪。 单兵能携带的东西很少，例如救人是需要止血带的。而除医疗兵以外的兵种都只能携带两个。筒子（即携带反坦克武器[火箭筒？]的兵种）往往只能携带一发弹药，对付重装甲时要是打偏了就会陷入困境。 单兵不是什么都会的神兵天将。如果不是医疗兵，你将 你的很多运动都需要消耗体力，除了跑步，摇头晃脑、翻越等动作都会消耗大量的体力。翻过一栋墙的你根本跑不动几步路。而且当体力少于满值的一半时，你会听到喘息声并无法通过屏息来稳定准心。 如果你濒死状态被扶起来，你的视野是没有颜色纯黑白的，同时体力条会保持空值，对周围环境的感知能力会大大降低，如听觉会出现减弱，甚至会分不清敌我。 所以，团队之间的合作就非常重要。在游戏中与队友开麦交流非常重要（很多服务器会禁止无麦带队）。听好队长指挥是每个队员的责任。\n游戏中，一支队伍会有指挥官，成员被分为一个个小队（最多九人），每个小队有自己的队长，且又被分为一个个火力组。命令层层下发，信息层层上报。作为一名小队员，你不能直接和别队的队员通过无线电通信，更无法和指挥官通信，只能上报给你的队长，队长再将信息传达给指挥官或其他队长。\n例如，一名轻筒（携带轻型反坦克武器的兵种）看见了地方坦克，正确的方式不是立刻端起武器冲上去幻想自己能凭一己之力干掉坦克立大功，而是马上开麦汇报自己看见了坦克以及坦克的方位，听从小队长的安排，然后隐蔽寻找机会用轻型火箭筒攻击坦克。\n但是轻筒实际上很难对重装甲载具造成大伤害，更别说一发解决一辆坦克了（坦克并没有很多作品中表现的那样脆弱，那是为了剧情需要或游戏平衡性考虑，事实上坦克可以承受三次到四次的爆炸，一发穿甲弹也很难真正干掉一发坦克）轻筒应该瞄准坦克的履带，使其丧失行动能力，如果车上有成员下来修车再加以阻止，然后通知附近的重筒或反坦克导弹快点来解决坦克。\n值得注意的是，Squad中对各兵种有严格的数量限制，火箭筒、狙击枪、地雷这些东西可不是人手一个的，而是相对较少的。因此团队合作和战略部署就非常的重要了。\n感受战场的压迫感吧！Squad中往往会出现友军误伤的情况，因为它有着拟真的敌我识别机制。队友头上并不会有明显的标识，但当你注视着他你会“认出他”（他的名字会浮现），而敌军则不会。但这是需要时间的，而且越远的队友名字就越浅甚至不会出现。有些对局中的敌我衣服颜色相差无几，你甚至要通过体态等特征来识别敌我。\n身为医疗兵的你，可能会在轰炸中卧倒在地，看见满地如蚂蚁般密密麻麻趴着的需要治疗的队友。没扶起几个第二轮轰炸就将他们统统炸倒，一些已经倒下的队友则当场去世。面对满地的伤员，痛苦的呻吟和震耳欲聋的轰炸声充斥着你的耳朵，你就会对”地狱绘图“四个字有更近一步的理解。\n游戏的声音系统也很赞，按“B”使用无线电和小队成员通信（会有对讲机“滴”的一声真的一个小细节大大增强了游戏的真实感和代入感），按“V”则和周围人说话。按“V”进行区域语音时，声音会随着距离而衰减（倒地后对着屏幕大喊医疗？）。而且如果你正坐在载具上，发动机的声音会覆盖一部分语音。至于处于轰炸中，能保全自己的耳朵已经是不幸中的万幸，真的很难听清身边的人在说什么。\n一直在说步兵，其实游戏中的载具也值得体验一番。游戏中有侦察车、运兵车、补给卡车、坦克等多样的载具。一个载具队往往需要分工合作，有人驾驶、有人做炮手、有人做侦查。在载具大战中获胜一定会给你和队友带来很大的成就感，当然吃炮弹也会让你感受到十足的惊心动魄的压迫感。（载具爆炸更是会给你留下不小的心理阴影（小声唧唧））\n还有游戏中的坐标战术地图也是非常重要而且硬核的元素，可以用来敌我识别、标注点位、汇报信息等等。\n如果你想体验站在真实的战场上是什么感觉，Squad或许能给你一点苗头。\n游戏在Steam售卖：https://store.steampowered.com/app/393380/Squad\n原价：149RMB 史上最低价格：58元\n","permalink":"https://www.hetaoblog.site/posts/%E6%B8%B8%E6%88%8F-squad%E6%88%98%E6%9C%AF%E5%B0%8F%E9%98%9F100%E5%B0%8F%E6%97%B6%E6%B8%B8%E7%8E%A9%E4%BD%93%E9%AA%8C/","summary":"不可错失的硬核FPS佳作","title":"游戏·Squad战术小队100小时游玩体验"},{"content":" ","permalink":"https://www.hetaoblog.site/links/","summary":"","title":"Links"},{"content":"吃核桃不吐核桃壳\n或者核桃、He_ta0\n一个庸俗无趣的灵魂\n但是也有认真地在寻找救赎\n我的联系方式请见主页\n","permalink":"https://www.hetaoblog.site/about/","summary":"吃核桃不吐核桃壳 或者核桃、He_ta0 一个庸俗无趣的灵魂 但是也有认真地在寻找救赎 我的联系方式请见主页","title":"关于"},{"content":" 题目地址🔗：https://leetcode.cn/problems/longest-common-prefix/\n0x01 题目内容 编写一个函数来查找字符串数组中的最长公共前缀。\n如果不存在公共前缀，返回空字符串 \u0026ldquo;\u0026quot;。\n示例 1：\n输入：strs = [\u0026ldquo;flower\u0026rdquo;,\u0026ldquo;flow\u0026rdquo;,\u0026ldquo;flight\u0026rdquo;] 输出：\u0026ldquo;fl\u0026rdquo; 示例 2：\n输入：strs = [\u0026ldquo;dog\u0026rdquo;,\u0026ldquo;racecar\u0026rdquo;,\u0026ldquo;car\u0026rdquo;] 输出：\u0026rdquo;\u0026quot; 解释：输入不存在公共前缀。\n提示：\n1 \u0026lt;= strs.length \u0026lt;= 200 0 \u0026lt;= strs[i].length \u0026lt;= 200 strs[i] 仅由小写英文字母组成\n0x02 算法思路 同学教的一个非常妙的解法：\n0x001 算法原理 Python中字符串是可以比较大小的，比较的规则是根据ASCII表来将字符串转换成数组再按位比较，举几个例子：\nabc和bac比较 有\u0026quot;abc\u0026quot;\u0026lt;\u0026quot;bac\u0026quot;\n原因是通过查表，a、b、c的数字编号分别为97、98、99。\nabc -\u0026gt; [97, 98, 99] bac -\u0026gt; [98, 97, 99] 从第一位开始比较，因为97 \u0026lt; 98，直接得到\u0026quot;abc\u0026quot;\u0026lt;\u0026quot;bac\u0026quot;而不需要处理后面的部分\nabc和aac进行比较 有\u0026quot;abc\u0026quot;\u0026gt;\u0026quot;aac\u0026quot;\nabc -\u0026gt; [97, 98, 99] aac -\u0026gt; [97, 97, 99] 从第一位开始比较，有97 = 97，所以接着吧比较第二位，很明显有98 \u0026gt; 97，得出\u0026quot;abc\u0026quot;\u0026gt;\u0026quot;aac\u0026quot;\nabcc和abc进行比较 有\u0026quot;abcc\u0026quot;\u0026gt;\u0026quot;abc\u0026quot;\nabcc -\u0026gt; [97, 98, 99, 99] abc -\u0026gt; [97, 98 ,99] 这次我们发现，对比前三位都一样的情况下，字符串abc没有第四位和abcc进行比较了。这时候就给abc的结尾补上空字符：\nabc -\u0026gt; [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;, NUL] -\u0026gt; [97, 98, 99, 0] 空字符NUL对应编号为0，是ASCII表中最小的。\n自然就有\u0026quot;abcc\u0026quot;\u0026gt;\u0026quot;abc\u0026quot;\n0x002 利用思路 通过比对字符串，可以把一个list[str]（全是字符串的列表）进行排序，从而可以得到一个最大值和最小值。\nmax_str: str = max(strs) min_str: str = min(strs) 应该有，在strs: list[str]中，max_str和min_str是“差得最远”的（或区别最大的）。二者的最长公共前缀（具有相似特征）应该也是strs中每一项的最长公共前缀。\n使用纵向扫描求max_str和min_str的最长公共前缀。\n即设变量lcp: str。下标从0开始扫描两个字符串，若相同则将该位字符加入lcp尾部，若不同则跳出循环，返回lcp。\n0x03 算法实现 Python代码\n# 最长公共前缀 # 14 longest-common-prefix # Code By 吃核桃不吐核桃壳 # leetcode submit region begin(Prohibit modification and deletion) class Solution: @staticmethod def longestCommonPrefix(strs: list[str]) -\u0026gt; str: lcp: str = \u0026#39;\u0026#39; max_str: str = max(strs) min_str: str = min(strs) len_str: int = min(len(max_str), len(min_str)) for num in range(len_str): if max_str[num] == min_str[num]: lcp += max_str[num] else: break return lcp # leetcode submit region end(Prohibit modification and deletion) 顺便说下python3.6之后支持了类型注解，代码写出来规范而且很漂亮，有效增加了可读性。\n使用typing库还可以自定义数据类型和数据类型别名。\n","permalink":"https://www.hetaoblog.site/posts/leetcode%E7%AC%AC14%E9%A2%98%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/","summary":"记录一个绝妙的方法","title":"Leetcode第14题最长公共前缀"},{"content":"记录一下安装Docker版本的破解AWVS和Nessus\nDocker破解AWVS和Nessus AWVS和Nessus，不多介绍，漏洞扫描器，前者多用于扫Web漏洞，后者多用于扫系统漏洞。\n看到有人把自用的AWVS和Nessus都封装成Docker开源了，开箱即用也挺方便的就配置下。\n开源大佬牛逼！！！\n0x01 安装 Nessus 感谢大佬开源，项目地址。全都帮我们配置好了，真的感谢大佬🙏。下面一行代码就搞定了安装，比起以前用Nessus可以简单了太多。\ndocker run -itd -p 8834:8834 ramisec/nessus 大佬也是个很有意思的人，给我们留了道作业题，要密码就去GitHub仓库自己找。相信有安全功底应该不难的，实在不会可以抄作业或者直接进Docker用nessuscli修改密码自己Google：\n{% folding child:codeblock color:yellow 噫～不会这么简单一道题都要抄作业吧(･･;) %}\n# v2 20220621 更新20220620最新版插件，同时采用2个版本 nessus/nessuslite 前者是已经破解好并且编译好插件，开箱即用 后者开机后需要等待几分钟编译插件 password: U2FsdGVkX19WZv+QOe8awVyJwXDPSNSIC1X4AMNA4+3rO8mL/3HZ+mS/Or3DhcWXKs0WHfvOH1q/YNtVdXnaHg== **tips**: github/elliot-bia ​\tpassword是AES加密，加密密码🔐我不说，解密完得到一串base64然后得到密码。\n{% endfolding %}\n完事打开https://localhost:8834/#/就OK啦。\n0x02 安装AWVS [项目传送门🔗](docker run -it -d \u0026ndash;name awvs -p 3443:3443 xrsec/awvs:latest)\n一行命令安装：\nbash \u0026lt;(curl -skm 10 https://www.fahai.org/aDisk/Awvs/check.sh) xrsec/awvs 下载RootCA.cer加入根证书并设置信任。然后打开https://127.0.0.1:3443/#/\n用户名：awvs@awvs.lan 密码： Awvs@awvs.lan\n搞定🤝\n0x03 感谢和参考文献 感谢开源大佬法海和elliot-bia\n参考文献：\nhttps://www.fahai.org/index.php/archives/5/ https://mari0er.club/post/scanner.html/ ","permalink":"https://www.hetaoblog.site/posts/dokcer%E7%A0%B4%E8%A7%A3awvs%E5%92%8Cnessus/","summary":"记录一下安装Docker版本的破解AWVS和Nessus Docker破解AWVS和Nessus AWVS和Nessus，不多介绍，漏洞扫描器，","title":"Dokcer破解AWVS和Nessus"},{"content":"Hello, world ! 再一次开始创作吧！\n在近百亿人中与你相遇是一种幸运的幸福。\n你好，今天是2022年的七月25日，仁寅年六月初七，是一个星期一。今天炎热而无聊，并没有发生什么国际大事，对我的漫长一生也没有举足轻重的意义。但是我写了一篇HelloWorld。\n写博客，成为了一件一天比一天更难的事情。\n这不是第一次写博客站上的HelloWorld了，但却是最有思考、最有感慨的一次。\n为什么写作？\n我朋友曾经在他的HelloWorld里回答了三个理由。\n博客很酷 专心写字 学习闭环 那是2020年1月18日。\n现在的创作者，有太多的选择。当视频逐渐挤压着文字的生存空间，简短的微博打击着长篇大论的博客，平台创作让独立建站越来越步履维艰。坚持内容创作，成为了一种极难以坚持的事。拿着笔的人往往孤独而寂寞。\n博客很酷，现在的博客是否还真的很酷呢？写着几百几千阅读量的文章，比起上十万百万播放量的视频，给人带来的快乐和感官冲击实在是太少。对于一些习惯碎片化阅读的人们来说，超过10分钟阅读时长的博文依然失去了吸引力。这样的博客是否还酷呢？现在的一篇博客，如果不出现在微信公众号上通过唬人的标题、刺激的封面，不依靠各族妖魔鬼怪骗取流量，不出现在平台上，还能不能得到那么多人的关注和喜欢呢？拿笔的人越来越寂寞，不仅仅是因为读者越来越少，更是因为同行的人、理智的人、浪漫的人越来越少了。而专心写字，在这样一个耐不住寂寞和冷清的时代，有是否还有它的余温？学习闭环，又有太多更便利、更舒适、更不折腾的方式实现……\n似乎找不到坚持创作内容的理由了\n那为什么坚持创作呢？\n相信每个创作者都有他们的理由。但我觉得，文字博客之所以在互联网的边缘占有一席之地，是因为所有热忱的灵魂都渴望相遇，渴望向外表达自己，向内沉淀自己。\n那些几百条评论，上万次阅读的文章终究只是少数，我看到了更多默默无闻的创作者，即使非常努力地坚持创作，也等不来他的那份应得的热闹。但我也明白收到第一条评论、第一条私信，因为博客结识到的第一个朋友时，那种发自内心的激动和快乐。高山流水，透过自己文字，看到自己的灵魂的人，和自己一样坚持着内容创作的人，一定拥有一个和自己一样浪漫而充实的灵魂。\n我曾绞尽脑汁去追寻灵光一现的灵感，去寻找内容的源泉。但最终发现，一头公牛无论如何都挤不出奶。一个充满了各种点子的、能写出有趣的文字的发光的灵魂，是很难通过努力伪造的。\n而往往是在生活中不断反思沉淀、有着深邃的思考、广泛的阅读、可爱浪漫而真诚的灵魂的人，往往抱着满腔的表达欲和分享欲，能轻松而快乐地写下真诚而美好、不矫揉造作无病呻吟的文字来。\n与其苦苦寻找灵感，把创作当作一种工作，为什么不提升自己，重塑自己的灵魂，填补空虚，等着灵感冒泡，让创作成为一种快乐呢？\n回首萧瑟，那人正在灯火阑珊处\n在一个喧闹的时代选择安静，静静等待着别的灵魂和自己的灵魂相遇与发现的人，或许不是那个大多数，但一定拥有最浪漫、最可爱的人。\n","permalink":"https://www.hetaoblog.site/posts/hello-world/","summary":"Hello, world ! 再一次开始创作吧！","title":"Hello World"}]